{"version":3,"sources":["components/images/addButton.png","components/images/starFullButton.png","components/images/starEmptyButton.png","components/colorSquare.jsx","components/colorPickerUI.jsx","components/customColorPicker.jsx","components/colorGrid.jsx","components/upperHalfHolder.jsx","App.js","index.js","components/images/editButton.png","components/images/lock-locked.png","components/images/lock-unlocked.png","components/images/deleteButton.png","components/images/rightArrow.png","components/images/leftArrow.png"],"names":["module","exports","ColorSquare","setLockImage","props","colorSquare","isLocked","lockLockedImage","lockUnlockedImage","console","log","this","gridLength","class","style","squareStyle","src","alt","onClick","handleLockPress","deleteBtnImage","onDelete","index","leftBtnImage","swapSquares","editBtnImage","openColorPicker","rightBtnImage","backgroundColor","Component","ColorPickerUI","state","previousColorStyle","width","height","newColorStyle","holderStyle","createStyle","str","newStyle","prevColor","onAccept","onDecline","CustomColorPicker","borderStyle","colorPickerStyle","handleChange","color","event","className","onChange","disableAlpha","presetColors","ColorGrid","colorPickerState","showColorPicker","activeColorSquare","colorSquares","initialColors","addColorSquare","newColorSquare","length","randomColor","updateColorSquareDimensions","splice","updateIndex","indexOf","setState","hex","randomizeColors","i","newColor","direction","newIndex","temp","updateWindowDimensions","bind","window","addEventListener","removeEventListener","innerWidth","innerHeight","document","getElementById","left","top","map","key","id","addBtnImage","UpperHalfHolder","favorited","setStarImage","fullStarImage","emptyStarImage","handleFavoriteBtn","App","Helmet","ReactDOM","render"],"mappings":"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","file":"static/js/main.7ce6250f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/addButton.a62c3f55.png\";","module.exports = __webpack_public_path__ + \"static/media/starFullButton.3e5b61f7.png\";","module.exports = __webpack_public_path__ + \"static/media/starEmptyButton.1c31a749.png\";","import React, { Component } from \"react\";\n//various button images\nimport editBtnImage from \"./images/editButton.png\";\nimport lockLockedImage from \"./images/lock-locked.png\";\nimport lockUnlockedImage from \"./images/lock-unlocked.png\";\nimport deleteBtnImage from \"./images/deleteButton.png\";\nimport rightBtnImage from \"./images/rightArrow.png\";\nimport leftBtnImage from \"./images/leftArrow.png\";\n//style sheet\nimport \"./styles/gridStyling.css\";\n\nclass ColorSquare extends Component {\n  //helper method that calls handleChange in colorGrid component\n\n  //changes lock image based on isLocked property\n  setLockImage = () => {\n    if (this.props.colorSquare.isLocked) {\n      return lockLockedImage;\n    } else {\n      return lockUnlockedImage;\n    }\n  };\n\n  render() {\n    console.log(this.props.gridLength);\n    return (\n      <div class=\"left-float\">\n        <div class=\"color-square\" style={this.props.colorSquare.squareStyle}>\n          <span class=\"helper\"></span>\n          <img\n            class=\"lock-button\"\n            src={this.setLockImage()}\n            alt={\"lock button\"}\n            onClick={() => this.props.handleLockPress(this.props.colorSquare)}\n          ></img>\n          <img\n            class=\"delete-button\"\n            src={deleteBtnImage}\n            alt={\"delete button\"}\n            onClick={() => this.props.onDelete(this.props.colorSquare)}\n          ></img>\n          {this.props.colorSquare.index !== 0 && (\n            <img\n              class=\"left-arrow\"\n              src={leftBtnImage}\n              alt={\"left arrow\"}\n              onClick={() =>\n                this.props.swapSquares(this.props.colorSquare, \"left\")\n              }\n            ></img>\n          )}\n          <img\n            class=\"edit-button\"\n            src={editBtnImage}\n            alt={\"edit button\"}\n            onClick={() => this.props.openColorPicker(this.props.colorSquare)}\n          ></img>\n          {this.props.colorSquare.index !== this.props.gridLength - 1 && (\n            <img\n              class=\"right-arrow\"\n              src={rightBtnImage}\n              alt={\"right arrow\"}\n              onClick={() =>\n                this.props.swapSquares(this.props.colorSquare, \"right\")\n              }\n            ></img>\n          )}\n          <h1 class=\"color-text\">\n            {this.props.colorSquare.squareStyle.backgroundColor}\n          </h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ColorSquare;\n","import React, { Component } from \"react\";\n\nclass ColorPickerUI extends Component {\n  state = {\n    previousColorStyle: {\n      width: 90,\n      height: 50,\n      backgroundColor: \"red\"\n    },\n    newColorStyle: {\n      width: 90,\n      height: 50,\n      backgroundColor: \"blue\"\n    },\n    holderStyle: {\n      width: 90\n    }\n  };\n\n  createStyle = str => {\n    if (str === \"previous\") {\n      var newStyle = {\n        width: 90,\n        height: 50,\n        backgroundColor: this.props.colorSquare.prevColor\n      };\n    } else {\n      newStyle = {\n        width: 90,\n        height: 50,\n        backgroundColor: this.props.colorSquare.squareStyle.backgroundColor\n      };\n    }\n    return newStyle;\n  };\n\n  render() {\n    return (\n      <div style={this.state.holderStyle} class=\"color-preview-holder\">\n        <p class=\"color-preview-text\">new</p>\n        <div style={this.createStyle(\"new\")}></div>\n        <div style={this.createStyle(\"previous\")}></div>\n        <p class=\"color-preview-text\">previous</p>\n        <br></br>\n        <button\n          class=\"accept-decline\"\n          onClick={() => this.props.onAccept(this.props.colorSquare)}\n        >\n          accept\n        </button>\n        <button\n          class=\"accept-decline\"\n          onClick={() => this.props.onDecline(this.props.colorSquare)}\n        >\n          decline\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ColorPickerUI;\n","import React, { Component } from \"react\";\nimport \"./styles/colorPickerStyling.css\";\nimport { SketchPicker } from \"react-color\";\nimport ColorPickerUI from \"./colorPickerUI\";\n\nimport \"react-color-picker/index.css\";\n\nclass CustomColorPicker extends Component {\n  state = {\n    borderStyle: {\n      width: 375,\n      height: 270\n    },\n    colorPickerStyle: {\n      width: 240,\n      height: 235\n    }\n  };\n\n  handleChange = (color, event) => {\n    this.props.handleChange(color, this.props.colorSquare);\n  };\n\n  render() {\n    return (\n      <div className=\"border\" style={this.state.borderStyle}>\n        <div\n          className=\"color-picker-holder\"\n          style={this.state.colorPickerStyle}\n        >\n          <SketchPicker\n            color={this.props.colorSquare.squareStyle.backgroundColor}\n            onChange={this.handleChange}\n            disableAlpha={true}\n            presetColors={[]}\n            width={this.state.colorPickerStyle.width - 20}\n          ></SketchPicker>\n        </div>\n        <div class=\"UI-holder\">\n          <ColorPickerUI\n            onAccept={this.props.onAccept}\n            onDecline={this.props.onDecline}\n            colorSquare={this.props.colorSquare}\n          ></ColorPickerUI>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CustomColorPicker;\n","import React, { Component } from \"react\";\nimport ColorSquare from \"./colorSquare\";\nimport randomColor from \"randomcolor\";\nimport CustomColorPicker from \"./customColorPicker\";\n//button images\nimport addBtnImage from \"./images/addButton.png\";\n//style sheet\nimport \"./styles/gridStyling.css\";\n\nclass ColorGrid extends Component {\n  //constructor to add listener to window resizing\n  constructor(props) {\n    super(props);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  state = {\n    //contains the state of the custom color picker object\n    colorPickerState: {\n      showColorPicker: false,\n      activeColorSquare: 0\n    },\n    //state containing array of color square objects\n    colorSquares: [\n      {\n        index: 0,\n        prevColor: this.props.initialColors[0],\n        isLocked: false,\n        squareStyle: {\n          backgroundColor: this.props.initialColors[0],\n          height: 500,\n          width: 256\n        }\n      },\n      {\n        index: 1,\n        prevColor: this.props.initialColors[1],\n        isLocked: false,\n        squareStyle: {\n          backgroundColor: this.props.initialColors[1],\n          height: 500,\n          width: 256\n        }\n      },\n      {\n        index: 2,\n        prevColor: this.props.initialColors[2],\n        isLocked: false,\n        squareStyle: {\n          backgroundColor: this.props.initialColors[2],\n          height: 500,\n          width: 256\n        }\n      },\n      {\n        index: 3,\n        prevColor: this.props.initialColors[3],\n        isLocked: false,\n        squareStyle: {\n          backgroundColor: this.props.initialColors[3],\n          height: 500,\n          width: 256\n        }\n      }\n    ]\n  };\n\n  //stack overflow: https://stackoverflow.com/questions/36862334/get-viewport-window-height-in-reactjs\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.updateColorSquareDimensions();\n  }\n  //end of stack overflow\n\n  //updates the width of each color square\n  updateColorSquareDimensions() {\n    const colorSquares = this.state.colorSquares;\n\n    for (var i = 0; i < colorSquares.length; i++) {\n      const squareStyle = { ...colorSquares[i].squareStyle };\n      squareStyle.width = (window.innerWidth - 75) / colorSquares.length;\n      squareStyle.height = window.innerHeight * 0.75;\n      colorSquares[i].squareStyle = squareStyle;\n    }\n\n    document.getElementById(\"color-picker\").style.left =\n      (colorSquares[0].squareStyle.width / 2) * colorSquares.length -\n      375 / 2 +\n      \"px\";\n\n    document.getElementById(\"color-picker\").style.top =\n      colorSquares[0].squareStyle.height / 2 - 270 / 2 + \"px\";\n\n    this.setState({ colorSquares });\n  }\n\n  //updates state to remove color square at specified index\n  addColorSquare = () => {\n    const newColorSquare = {\n      //updates the index accordingly\n      index: this.state.colorSquares.length,\n      prevColor: randomColor(),\n      isLocked: false,\n      squareStyle: {\n        backgroundColor: randomColor(),\n        height: 500,\n        width: 256\n      }\n    };\n    const colorSquares = this.state.colorSquares;\n    colorSquares[colorSquares.length] = newColorSquare;\n    this.updateColorSquareDimensions();\n  };\n\n  //updates state to remove color square at specified index\n  onDelete = colorSquare => {\n    const colorSquares = this.state.colorSquares;\n    colorSquares.splice(colorSquare.index, 1);\n\n    this.updateIndex(colorSquares);\n\n    this.updateColorSquareDimensions();\n  };\n\n  //updates state to add color square at the end of the array\n  handleLockPress = colorSquare => {\n    const colorSquares = this.state.colorSquares;\n    const index = colorSquares.indexOf(colorSquare);\n    colorSquares[index].isLocked = !colorSquares[index].isLocked;\n    this.setState({ colorSquares });\n  };\n\n  //makes the color picker component visible\n  openColorPicker = colorSquare => {\n    const colorSquares = this.state.colorSquares;\n    const index = colorSquares.indexOf(colorSquare);\n    const colorPickerState = this.state.colorPickerState;\n    //sets color picker to visible\n    colorPickerState.showColorPicker = true;\n    colorPickerState.activeColorSquare = index;\n    this.setState({ colorSquares });\n    this.setState({ colorPickerState });\n  };\n\n  //reverts to original state and deletes the color changes\n  onDecline = colorSquare => {\n    const colorSquares = this.state.colorSquares;\n    const index = colorSquares.indexOf(colorSquare);\n    const colorPickerState = this.state.colorPickerState;\n    colorPickerState.showColorPicker = false;\n\n    //changes background color to previous color\n    var squareStyle = { ...colorSquares[index].squareStyle };\n    squareStyle.backgroundColor = colorSquares[index].prevColor;\n    colorSquares[index].squareStyle = squareStyle;\n\n    this.setState({ colorPickerState });\n    this.setState({ colorSquares });\n  };\n\n  //changes state to store the new color and reverts to original state\n  onAccept = colorSquare => {\n    const colorSquares = this.state.colorSquares;\n    const index = colorSquares.indexOf(colorSquare);\n    const colorPickerState = this.state.colorPickerState;\n\n    colorPickerState.showColorPicker = false;\n    //changes previous color to new background color\n    colorSquares[index].prevColor =\n      colorSquares[index].squareStyle.backgroundColor;\n\n    this.setState({ colorPickerState });\n    this.setState({ colorSquares });\n  };\n\n  //updates color picker information when pointer is moved\n  handleChange = (color, colorSquare) => {\n    const colorSquares = this.state.colorSquares;\n    const index = colorSquares.indexOf(colorSquare);\n    var squareStyle = { ...colorSquares[index].squareStyle };\n\n    squareStyle.backgroundColor = color.hex;\n    colorSquares[index].squareStyle = squareStyle;\n\n    this.setState({ colorSquares });\n  };\n\n  //randomizes colors of appropriate unlocked color squares\n  randomizeColors = () => {\n    const colorSquares = this.state.colorSquares;\n    for (var i = 0; i < colorSquares.length; i++) {\n      if (!colorSquares[i].isLocked) {\n        var squareStyle = { ...colorSquares[i].squareStyle };\n        var newColor = randomColor();\n\n        squareStyle.backgroundColor = newColor;\n        colorSquares[i].squareStyle = squareStyle;\n      }\n      colorSquares[i].prevColor = newColor;\n    }\n    this.setState({ colorSquares });\n  };\n\n  //updates the indexes accordingly\n  updateIndex = colorSquares => {\n    for (var i = 0; i < colorSquares.length; i++) {\n      colorSquares[i].index = i;\n    }\n  };\n\n  swapSquares = (colorSquare, direction) => {\n    const colorSquares = this.state.colorSquares;\n    const index = colorSquare.index;\n\n    var newIndex = index - 1;\n    if (direction === \"right\") {\n      newIndex += 2;\n    }\n\n    var temp = colorSquares[index];\n    colorSquares[index] = colorSquares[newIndex];\n    colorSquares[newIndex] = temp;\n\n    this.updateIndex(colorSquares);\n\n    this.setState({ colorSquares });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <div class=\"left-float\">\n            {this.state.colorSquares.map(colorSquare => (\n              <ColorSquare\n                key={colorSquare.id}\n                colorSquare={colorSquare}\n                openColorPicker={this.openColorPicker}\n                handleLockPress={this.handleLockPress}\n                onDelete={this.onDelete}\n                gridLength={this.state.colorSquares.length}\n                swapSquares={this.swapSquares}\n              />\n            ))}\n          </div>\n          <div id=\"color-picker\" class=\"color-picker\">\n            {this.state.colorPickerState.showColorPicker && (\n              <CustomColorPicker\n                colorSquare={\n                  this.state.colorSquares[\n                    this.state.colorPickerState.activeColorSquare\n                  ]\n                }\n                onAccept={this.onAccept}\n                onDecline={this.onDecline}\n                handleChange={this.handleChange}\n              ></CustomColorPicker>\n            )}\n          </div>\n        </div>\n        <img\n          src={addBtnImage}\n          alt=\"add color square\"\n          class=\"add-button\"\n          onClick={this.addColorSquare}\n        ></img>\n        <button class=\"random-button\" onClick={this.randomizeColors}>\n          randomize\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ColorGrid;\n","import React, { Component } from \"react\";\r\nimport ColorGrid from \"./colorGrid\";\r\nimport randomColor from \"randomcolor\";\r\n\r\n//images\r\nimport fullStarImage from \"./images/starFullButton.png\";\r\nimport emptyStarImage from \"./images/starEmptyButton.png\";\r\n\r\nimport \"./styles/upperHalfStyling.css\";\r\n\r\nclass UpperHalfHolder extends Component {\r\n  state = {\r\n    favorited: false\r\n  };\r\n\r\n  //sets the appropriate favorited star image\r\n  setStarImage = () => {\r\n    if (this.state.favorited) {\r\n      return fullStarImage;\r\n    }\r\n    return emptyStarImage;\r\n  };\r\n\r\n  handleFavoriteBtn = () => {\r\n    this.setState({ favorited: !this.state.favorited });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"holder\">\r\n        <img\r\n          class=\"favorite-button\"\r\n          src={this.setStarImage()}\r\n          alt=\"favorite button\"\r\n          onClick={this.handleFavoriteBtn}\r\n        ></img>\r\n        <div id=\"child\">\r\n          <ColorGrid\r\n            initialColors={[\r\n              randomColor(),\r\n              randomColor(),\r\n              randomColor(),\r\n              randomColor()\r\n            ]}\r\n          ></ColorGrid>\r\n        </div>\r\n        <hr class=\"divider\"></hr>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpperHalfHolder;\r\n","import React from \"react\";\nimport UpperHalf from \"./components/upperHalfHolder\";\n//import CustomColorPicker from \"./components/customColorPicker\";\nimport { Helmet } from \"react-helmet\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Helmet>\n        <style>{\"body { background-color: #212020; }\"}</style>\n      </Helmet>\n      <UpperHalf></UpperHalf>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/editButton.6e16b9c4.png\";","module.exports = __webpack_public_path__ + \"static/media/lock-locked.b1bb5f0e.png\";","module.exports = __webpack_public_path__ + \"static/media/lock-unlocked.0457ecd3.png\";","module.exports = __webpack_public_path__ + \"static/media/deleteButton.0535b675.png\";","module.exports = __webpack_public_path__ + \"static/media/rightArrow.f46f84d7.png\";","module.exports = __webpack_public_path__ + \"static/media/leftArrow.3a0906f5.png\";"],"sourceRoot":""}